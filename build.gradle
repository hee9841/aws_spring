


//프러그인 의존성 관리를 위한 설정
//ext : build.gradle에서 사용하는 전역변수를 설정하는 키워드,
buildscript {
    ext {
        //pringBootVersion라는 전역변수를 생성한고 그 값을 3.2.5.RELEASE로 하겠다.
        springBootVersion = '2.4.1.RELEASE'
    }
    
    //각종 의존성(라이브러리)들을 어떤 원격 저장소에서 받을 지 정함
    repositories{
        //기본적으로 mavenCentral를 많이 사용
        //본인이 만든 라이브러리를 업로드 하기 위해 많은 과정필요 -> 라이브러리 업로드가 힘들다보니 점점 공유가 안되는 상황
        mavenCentral()
        //최근에는 라이브러리 업로드 난이도 때문에 jcenter도 많이 사용
        //간단하게 라이브러 업로드 할 수 있고, 업로드하면 mavenCentral에도 업로드 할 수 있게 자동화 됨
        //그래서 이 라이블러를 더 많이 사용함 
        jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

//앞에서 선언한 플러그인 의존성들을 적용할 것인지 결정하는 코드
//아래 
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' //스프링 부트의 의존성들을 관리해주는 플러그인(필수로 추가!!)



//
//plugins {
//    id 'java'
//}

group 'com.datji.aws'
version '1.0-SNAPSHOT'
sourceCompatibilty = 1.8

repositories {
    mavenCentral()
}

//프로젝트 개발에 필요한 의존성을 선언
dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    testCompile('org.springframework.boot:spring-boot-starter-test')
//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}
